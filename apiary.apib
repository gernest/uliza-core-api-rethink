FORMAT: 1A
HOST: http://private-cbd2c-uliza.apiary-mock.com

# Uliza Core

The Uliza Core API specifies points of access to Uliza system resources. 

## WebSocket API

This API implements a message-oriented JSON protocol for streaming communications, sent over a persistent WebSocket connection.

### Connecting to a streaming endpoint

### Message format

```
{
    [message_type]: {
        ...message
    }
}
```

## RESTful API

## Campaigns [/campaigns]

### List all campaigns [GET /campaigns{?limit,offset}]

+ Parameters
    + limit (number, optional) - limit=25 means, ‘return a maximum of 25 records’
    + offset (number, optional) - offset=50 means, ‘skip the first 50 records’

+ Response 200 (application/json)

        {
            "metadata": {
                "resultset": { 
                    "count": 227,
                    "offset": 50,
                    "limit": 25
                }
            },        
            "results": [
                {
                    "id": 2,
                    "name": "Paza Sauti",
                    "description": "Paza Sauti focuses on common bean practices which are relevant to farmers across Tanzania. Bill and Melinda Gates grantee IITA and their project N2Africa are hosting this round of the Listening Post.",                   
                    "start_date": "2015-11-27T14:40:51.620Z",
                    "end_date": "2015-11-27T14:40:51.620Z",
                    "stats": {
                        "total_responses": 11773,
                        "unique_respondents": 6787,
                        "questions": 4
                    }
                }
            ]
        }

### Create a new campaign [POST]

+ Request (application/json)

        {
            "name": "Paza Sauti",
            "description": "Paza Sauti focuses on common bean practices which are relevant to farmers across Tanzania. Bill and Melinda Gates grantee IITA and their project N2Africa are hosting this round of the Listening Post."
        }

+ Response 201 (application/json)

    + Headers

            Location: /campaigns/2

    + Body

            {
                "id": 2,
                "published_at": "2015-11-27T14:40:51.620Z",
                "name": "Paza Sauti",
                "description": "Paza Sauti focuses on common bean practices which are relevant to farmers across Tanzania. Bill and Melinda Gates grantee IITA and their project N2Africa are hosting this round of the Listening Post."
            }

### Retrieve a campaign [GET /campaigns/{id}]

+ Parameters
    + id (number) - ID of the campaign in the form of an integer

+ Response 200 (application/json)

        {
            "id": 2,
            "name": "Paza Sauti",
            "description": "Paza Sauti focuses on common bean practices which are relevant to farmers across Tanzania. Bill and Melinda Gates grantee IITA and their project N2Africa are hosting this round of the Listening Post.",                   
            "start_date": "2015-11-27T14:40:51.620Z",
            "end_date": "2015-11-27T14:40:51.620Z",
            "stats": {
                "total_responses": 11773,
                "unique_respondents": 6787,
                "questions": 4
            }
        }

### Delete a campaign [DELETE /campaigns/{id}]

+ Parameters
    + id (number) - ID of the campaign in the form of an integer

### Update a campaign [PUT /campaigns/{id}]

+ Parameters
    + id (number) - ID of the campaign in the form of an integer

## Surveys 

### List all surveys [GET /surveys{?limit,offset}]

+ Parameters
    + limit (number, optional) - limit=25 means, ‘return a maximum of 25 records’
    + offset (number, optional) - offset=50 means, ‘skip the first 50 records’

+ Response 200 (application/json)

        {
            "metadata": {
                "resultset": { 
                    "count": 227,
                    "offset": 50,
                    "limit": 25
                }
            },        
            "results": [
                {
                    "published_at": "2015-11-27T14:40:51.620Z",
                    "title": "What is your favorite food?",
                    "id": 1,
                    "choices": [
                        {
                            "choice": "Pizza",
                            "votes": 2048
                        }, {
                            "choice": "Ugali",
                            "votes": 1024
                        }, {
                            "choice": "Chips mayai",
                            "votes": 512
                        }, {
                            "choice": "Pop-corn",
                            "votes": 256
                        }
                    ]
                }
            ]
        }

### Create a new survey [POST]

+ Request (application/json)

        {
            "title": "What is your favorite food?",
            "choices": [
                "Pizza",
                "Ugali",
                "Chips mayai",
                "Pop-corn"
            ]
        }

+ Response 201 (application/json)

    + Headers

            Location: /surveys/2

    + Body

            {
                "published_at": "2015-11-27T14:40:51.620Z",
                "title": "What is your favorite food?",
                "id": 1,
                "choices": [
                    {
                        "choice": "Pizza",
                        "votes": 0
                    }, {
                        "choice": "Ugali",
                        "votes": 0
                    }, {
                        "choice": "Chips mayai",
                        "votes": 0
                    }, {
                        "choice": "Pop-corn",
                        "votes": 0
                    }
                ]
            }


### List all answers for a survey [GET /surveys/{id}/answers{?limit,offset}]

+ Parameters

+ Parameters
    + id (number) - ID of the survey in the form of an integer

+ Response 200 (application/json)

        {
            "metadata": {
                "resultset": { 
                    "count": 227,
                    "offset": 50,
                    "limit": 25
                }
            },        
            "results": [
                {
                }
            ]
        }


## Question [/questions]

### List all questions [GET]

+ Response 200 (application/json)

        {
            "results": [
                {
                }
            ]
        }

### Create a new question [POST]

+ Response 200 (application/json)

### Update a question [PUT]

+ Response 200 (application/json)

### Delete a question [DELETE]

+ Response 200 (application/json)

## Answers

### List all answers for a question [GET questions/{id}/answers]

+ Parameters
    + id (number) - ID of the question in the form of an integer

+ Response 200 (application/json)

        {
            "results": [
                {
                }
            ]
        }


## Participants

### List all participants [GET /participants]

+ Response 200 (application/json)

        {
            "results": [
                {
                },
                {
                },
                {
                },
            ]
        }

## Attributes

### List all attributes [GET /attributes]

+ Response 200 (application/json)

        {
            "results": [
                {
                },
                {
                },
                {
                },
            ]
        }

### Create a new attribute [POST /attributes]

### Update an attribute [PUT /attributes/{id}]

+ Parameters
    + id (number) - ID of the attribute in the form of an integer

### Delete an attribute [DELETE /attributes/{id}]

+ Parameters
    + id (number) - ID of the attribute in the form of an integer

## Users [/users]

### List all users [GET /users]

### Create a new user [POST /users]

### Update a user [PUT /users/{id}]

+ Parameters
    + id (number) - ID of the user in the form of an integer


### Delete a user [DELETE /users/{id}]

+ Parameters
    + id (number) - ID of the user in the form of an integer
